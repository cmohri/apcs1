public class MySorts{

    // VOID version of InsertionSort                                             
    // Rearranges elements of input ArrayList
    // postcondition: data's elements sorted in ascending order           
    public static void insertionSortV( ArrayList<Comparable> data )
    {

	//n-1 passes are required                                                   
	for (int passCtr = 1; passCtr < data.size(); passCtr ++){
	    //      System.out.println( "commencing pass #" + passCtr + "...");             
	    //passCtr also signifies where the partition is between sorted/unsorted       
	    for (int i = passCtr; i > 0; i--){
		//swapping into order                                         
		if (data.get(i).compareTo(data.get(i-1)) < 0){
		    Comparable smaller = data.get(i);
		    Comparable swapper = data.get(i - 1);
		    data.set(i-1, smaller);
		    data.set(i, swapper);
		}
	    }
	}
    }//end insertionSortV 

}